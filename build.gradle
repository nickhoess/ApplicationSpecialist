plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.0.0'
    id 'com.github.ben-manes.versions' version '0.47.0'
    id 'org.owasp.dependencycheck' version '8.0.0'
    id 'jacoco'
}

group = 'my.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mongodb:mongodb-driver-sync:5.2.1'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.13.3.202401111512-r'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.3.1' // Add this line for Mockito
}

configurations.all {
    resolutionStrategy {
        force 'org.eclipse.jgit:org.eclipse.jgit:5.13.3.202401111512-r'
    }
}

// Use JUnit Platform (JUnit 5) for testing
tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

// Jacoco code coverage config for GitHub CI (Codecov needs XML output)
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true  // Needed by codecov-action
        html.required = true // Optional, for viewing locally
        csv.required = false
    }
}

// Spotless code formatting check (CI uses this in formatting job)
spotless {
    java {
        eclipse() // Uses default Eclipse formatting rules
        // Optional: Use googleJavaFormat() instead if you prefer
    }
}

// OWASP Dependency Check (optional, for future CI job)
dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = 'dependency-check-suppressions.xml' // Optional
    analyzers {
        assemblyEnabled = false
    }
}

// Optional named task to simplify OWASP scans
tasks.register("securityScan") {
    dependsOn "dependencyCheckAnalyze"
}
